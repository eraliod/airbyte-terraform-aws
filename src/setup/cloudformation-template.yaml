AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template for Terraform backend resources"

Parameters:
  AppName:
    Type: String
    Description: "Name of the application"
  GithubRepo:
    Type: String
    Description: "GitHub repository (e.g., myorg/myrepo)"
  UniqueBucketId:
    Type: String
    Description: "Unique identifier for the S3 bucket"

Resources:
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${AppName}-${UniqueBucketId}-tf-state"

  DynamoDBTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "${AppName}-tf-lock"
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  S3BackendPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub "${AppName}-s3-backend-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:*"
              - "dynamodb:*"
            Resource:
              - !GetAtt S3Bucket.Arn
              - !Sub "${S3Bucket.Arn}/*"
              - !GetAtt DynamoDBTable.Arn
          - Effect: Allow
            Action:
              - "ssm:DescribeParameters"
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - "ssm:GetParameter"
              - "ssm:GetParameters"
              - "ssm:GetParametersByPath"
              - "ssm:PutParameter"
              - "ssm:DeleteParameter"
              - "ssm:DeleteParameters"
              - "ssm:ListTagsForResource"
            Resource:
              - !Sub "arn:aws:ssm:*:*:parameter/airbyte/*"

  TerraformPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub "${AppName}-tf-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "ec2:*"
              - "iam:*"
              - "rds:*"
              - "s3:*"
            Resource: "*"

  GitHubOIDCProvider:
    Type: "AWS::IAM::OIDCProvider"
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1

  TerraformRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${AppName}-tf-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com"
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": !Sub "repo:${GithubRepo}:*"
      ManagedPolicyArns:
        - !Ref S3BackendPolicy
        - !Ref TerraformPolicy

Outputs:
  TerraformRoleArn:
    Description: "ARN of the Terraform IAM Role"
    Value: !GetAtt TerraformRole.Arn
  TerraformS3BackendPolicyArn:
    Description: "ARN of the S3 backend IAM policy"
    Value: !Ref S3BackendPolicy
  TerraformS3BucketName:
    Description: "Name of the S3 bucket for Terraform state"
    Value: !Ref S3Bucket
  TerraformDynamoDBTableName:
    Description: "Name of the DynamoDB table for Terraform state locking"
    Value: !Ref DynamoDBTable